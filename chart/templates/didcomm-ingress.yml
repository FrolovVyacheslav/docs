{{- if eq .Values.tls "ingress" -}}
{{- if or (.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") (not (.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress")) }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  annotations:
{{- if eq .Values.ingress.tls.source "letsEncrypt" -}}
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencript-{{ .Values.ingress.tls.environment }}
{{- end }}
{{- if .Values.ingress.tls.requestTimeout }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
{{- end }}
spec:
  tls:
  - hosts:
    - {{ .Values.hostname }}
    secretName: {{ .Release.Name }}-tls
  rules:
  - host: {{ .Values.hostname }}  # hostname to access didcomm
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 80
{{- end }}
